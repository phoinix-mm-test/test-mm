name: Artifacts Handling for testss
on:
  workflow_run:
    workflows: ["Test Ole Super"]
    types:
      - completed
jobs:
  upload-s3:
    runs-on: ubuntu-latest
    env:
      REPO_NAME: ${{ github.event.repository.name }}
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Upload artifacts to S3
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow_conclusion: success
          run_id: 4582016437
          path: ${{github.workspace}}/server/dist
          name: server-dist-artifact
          repo: mattermost/mattermost-server
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@07c2f971bac433df982ccc261983ae443861db49 # v1-node16
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.PR_BUILDS_BUCKET_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PR_BUILDS_BUCKET_AWS_SECRET_ACCESS_KEY }}
      # Search for the string "pull" and replace it with "PR" in branch-name
      - name: ci/get-branch-name
        run: |
          echo "BRANCH_NAME=$(echo ${{ github.event.workflow_run.head_branch }} | sed 's/^pull\//PR-/g')" >> $GITHUB_ENV
          echo "Branch name is: $BRANCH_NAME"
      - name: ci/artifact-upload
        run: |
          aws s3 cp ${{github.workspace}}/server/dist s3://pr-builds.mattermost.com/$REPO_NAME/$BRANCH_NAME/ --acl public-read --cache-control "no-cache" --recursive --no-progress
          aws s3 cp ${{github.workspace}}/server/dist s3://pr-builds.mattermost.com/$REPO_NAME/commit/${{ github.sha }}/ --acl public-read --cache-control "no-cache" --recursive --no-progress
  build-docker:
    name: Build and push test docker image
    needs: upload-s3
    env:
      REPO_NAME: ${{ github.event.repository.name }}
    runs-on: ubuntu-22.04
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    steps:
    - name: Download artifact
      id: download-artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow_conclusion: success
        run_id: 4582016437
        name: server-build-artifact
        repo: mattermost/mattermost-server
        path: server/build/
    - name: Login to Docker Hub
      uses: docker/login-action@3da7dc6e2b31f99ef2cb9fb4c50fb0971e0d0139 # v2.1.0
      with:
        username: ${{ secrets.DOCKERHUB_DEV_USERNAME }}
        password: ${{ secrets.DOCKERHUB_DEV_TOKEN }}
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@11e8a2e2910826a92412015c515187a2d6750279 # v2.4
    - name: Docker build and push
      env:
        DOCKER_CLI_EXPERIMENTAL: enabled
      run: |
        export TAG=$(echo "${{ github.event.pull_request.head.sha || github.sha }}" | cut -c1-7)
        cd server/build
        export DOCKER_CLI_EXPERIMENTAL=enabled
        export MM_PACKAGE=https://pr-builds.mattermost.com/$REPO_NAME/commit/${{ github.sha }}/mattermost-team-linux-amd64.tar.gz
        docker buildx build --push --build-arg MM_PACKAGE=$MM_PACKAGE -t mattermostdevelopment/mm-te-test:${TAG} .
  # sentry:
  #   name: Send build info to sentry
  #   if: >
  #     github.event.workflow_run.event == 'pull_request' &&
  #     github.event.workflow_run.conclusion == 'success'
  #   runs-on: ubuntu-22.04
  #   env:
  #     SENTRY_AUTH_TOKEN: ${{ secrets.MM_SERVER_SENTRY_AUTH_TOKEN }}
  #     SENTRY_ORG: ${{ secrets.MM_SERVER_SENTRY_ORG }}
  #     SENTRY_PROJECT: ${{ secrets.MM_SERVER_SENTRY_PROJECT }}
  #   steps:
  #     - name: Checkout mattermost-server
  #       uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
  #     - name: Create Sentry release
  #       uses: getsentry/action-release@85e0095193a153d57c458995f99d0afd81b9e5ea # v1.3.0

